version: '3.8'

services:
  app:
    image: docker-nextjs-dev
    build: .
    ports:
      - "3000:3000"
    volumes:
      - ./src:/app/src
      - ./public:/app/public

  minio:
    image: bitnami/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - AWS_SDK_JS_SUPPRESS_MAINTENANCE_MODE_MESSAGE=1
      - MINIO_ROOT_USER=ROOTUSER
      - MINIO_ROOT_PASSWORD=CHANGEME123
    volumes:
      - minio_data:/data

  createbuckets:
    image: minio/mc:latest
    depends_on:
      - minio
    entrypoint: >
        /bin/sh -c "
        /usr/bin/mc alias set myminio http://minio:9000 ROOTUSER CHANGEME123;
        /usr/bin/mc mb myminio/starling-mvp-collections;
        /usr/bin/mc mb myminio/openai-mvp-collections;
        /usr/bin/mc policy set public myminio/starling-mvp-collections;
        /usr/bin/mc policy set public myminio/openai-mvp-collections;
        exit 0;
        "

  ollama:
    volumes:
      - ollama:/root/.ollama
    pull_policy: always
    tty: true
    restart: unless-stopped
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]

  postgres:
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgresvol:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  chromadb:
    image: chromadb/chroma
    volumes:
      - chromadb:/chroma/chroma
    environment:
      - IS_PERSISTENT=true
      - cors_allow_origins='["*"]'
    ports:
      - "8000:8000"

volumes:
  minio_data:
  ollama:
  postgresvol:
  chromadb:
